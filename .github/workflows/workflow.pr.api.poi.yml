name: "PR - api-poi (.NET Core)"

on:
  pull_request:
    branches:
      - main
    paths:
      - "apis/poi/**"
  workflow_dispatch:
  
# Set environment variables.
env:
  DOTNET_VERSION: "3.1.x"
  WORKDIR: "apis/poi"

# Set defaults for GitHub Actions runner.
defaults:
  run:
    working-directory: ${{ env.WORKDIR }}

jobs:
  buildtest:
    name: "Build and Test"
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo to the runner.
      - name: Checkout 
        uses: actions/checkout@v2

      # Setup .NET Core.
      - name: "Setup .NET Core ${{ env.DOTNET_VERSION }}"
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # Restore dependencies.
      - name: "Restore Dependencies"
        run: dotnet restore

      # Build the application.
      - name: "Build the App"
        run: dotnet build --no-restore

      # Run unit tests.
      - name: "Run Unit Tests"
        id: unittest
        run: |
          dotnet test --logger "trx;LogFileName=UnitTestResults.trx" --results-directory ./TestResults --no-build --filter "FullyQualifiedName~UnitTest"

      # Publish test results.
      - name: "Publish Test Results"
        if: success() || failure()
        uses: dorny/test-reporter@v1
        with:
          name: Test results
          path: "${{ env.WORKDIR }}/TestResults/UnitTestResults.trx"
          reporter: dotnet-trx
          fail-on-error: false

      - name: "Create an Issue"
        if: failure() && github.event_name != 'pull_request'
        run: |
          body='### Unit Test `failure`
          <details>
          <summary>Workflow details</summary>

          Workflow name: `${{ github.workflow }}`
          Action: `${{ github.event_name }}`
          Job: `${{ github.job }}`
          </details>

          Test details: [Run #${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          Pusher: @${{ github.actor }}'

          title='Unit Tests failure'
          gh issue create --title "${title}" --body "${body}" --label bug --assignee ${{ github.actor }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Create a PR comment"
        if: failure() && github.event_name == 'pull_request'
        run: |
          body='### Unit Test `failure`
          <details>
          <summary>Workflow details</summary>

          Workflow name: `${{ github.workflow }}`
          Action: `${{ github.event_name }}`
          Job: `${{ github.job }}`
          PR: #${{ github.event.number }}
          </details>

          Test details: [Run #${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          Pusher: @${{ github.actor }}'

          gh pr comment ${{ github.event.number }} --body "${body}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
